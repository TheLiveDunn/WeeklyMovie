// server.js

// BASE SETUP
// =============================================================================

// call the packages we need
var express       = require('express');    // call express
var app           = express();         // define our app using express
var bodyParser    = require('body-parser');
var request       = require('request');
var server_token  = '757KknCTIVuPKGmi3s5SCmQ8RNrPncXi77zT7PFUe1jCwvJd76d69SbkPgKD';
var $ = require('jquery');

// configure app to use bodyParser()
// this will let us get the data from a POST
app.use(bodyParser.urlencoded({ extended: true }));
app.use(bodyParser.json());

var port = process.env.PORT || 8080;    // set our port

// ROUTES FOR OUR API
// =============================================================================
var router = express.Router();        // get an instance of the express Router

// test route to make sure everything is working (accessed at GET http://localhost:8080/api)
router.get('/', function(req, res) {
  res.json({ message: 'hooray! this is the movie bot!' });
});

router.post('/message', function(req, res) {
  if (req.body.type == 12) {
    sendMessage('Hey! Text this number to recieve the three best movies that came out this week!',req.body.sender.username);
  };
  if (req.body.type == 21) {
     checkMovies(function(result){
    	 sendMessage(result, req.body.sender.username);
    });
  };
  res.status(200).json({reply:true});
});

// REGISTER OUR ROUTES -------------------------------
// all of our routes will be prefixed with /api
app.use('/api', router);

// START THE SERVER
// =============================================================================
app.listen(port);
console.log('Magic happens on port ' + port);

function sendMessage(message_text, username) {
  var options = {
    url: 'https://devs.inboxtheapp.com/message',
    headers: {
        'Authorization': 'bearer ' + server_token
    },
    json: {
      to: username,
      text: message_text
    }
  };
  function callback(error, response, body) {
  	console.log('callback response:', error, body);
  };
  request.post(options,callback);
};

function checkMovies(cb) {
	request({
		url: "http://api.rottentomatoes.com/api/public/v1.0/lists/movies/opening.json?apikey=24wnh74unb5r355hfnwz9mw3&limit=16"	}, 
		function(err, response, body){
			if(err) return console.log(err);
			var result = searchCallback(body);
			console.log('this is the result:', result);
			cb(result);
		});
};
		
function searchCallback(data) {
	try{
	   var parsedData = JSON.parse(data);
	   movies = parsedData.movies;
	} catch(e){
		console.log('did not make it through searchCallback'); 
		return;
	}
	var bestMovie;
	var secondBestMovie;
	var thirdBestMovie;
	var count = 0;
	console.log('starting with foreach');
	movies.forEach(function(movie, index) {
		if(count == 0)
		{
			bestMovie = movie;
			count = 1;
		}
		else if(count == 1)
		{
			if(movie.ratings.critics_score < bestMovie.ratings.critics_score)
			{
				secondBestMovie = movie;
			}
			else
			{
				secondBestMovie = bestMovie;
				bestMovie = movie;
			}
			count = 2;
		}
		else if(count == 2)
		{
			if(movie.ratings.critics_score > secondBestMovie.ratings.critics_score)
			{
				if(movie.ratings.critics_score > bestMovie.ratings.critics_score)
				{
					thirdBestMovie = secondBestMovie;
					secondBestMovie = bestMovie;
					bestMovie = movie;
				}
				else
				{
					thirdBestMovie = secondBestMovie;
					secondBestMovie = movie;
				}
			}
			else
			{
				thirdBestMovie = movie;
			}
			count = 3
		}
		else if(movie.ratings.critics_score > thirdBestMovie.ratings.critics_score)
		{
			if(movie.ratings.critics_score > secondBestMovie.ratings.critics_score)
			{
				if(movie.ratings.critics_score > bestMovie.ratings.critics_score)
				{
					thirdBestMovie = secondBestMovie;
					secondBestMovie = bestMovie;
					bestMovie = movie;
				}
				else
				{
					thirdBestMovie = secondBestMovie;
					secondBestMovie = movie;
				}
			}
			else
			{
				thirdBestMovie = movie;
			}
		}
	});
    console.log('done with foreach');
	var fullText = "The three best movies this week are: \n" + bestMovie.title + " " + bestMovie.ratings.critics_score + "\n" + secondBestMovie.title + " " + secondBestMovie.ratings.critics_score + "\n" + thirdBestMovie.title + " " + thirdBestMovie.ratings.critics_score;
	return fullText;
}
